{"version":3,"sources":["Turbine.js","App.js","serviceWorker.js","index.js"],"names":["THREE","require","TrackballControls","_","Turbine","colors","normal","tank","shaft","disk","hub","blade","baffle","hover","_this2","this","glRenderer","WebGLRenderer","canvas","refs","painter","alpha","antialias","animate","onAnimate","scene","Scene","camera","PerspectiveCamera","position","set","props","tankDiameter","add","light","PointLight","controls","rotateSpeed","zoomSpeed","panSpeed","noZoom","noPan","staticMoving","dynamicDampingFactor","keys","addEventListener","copy","startAutoRotation","raycaster","Raycaster","normalVector","Vector2","window","event","x","clientX","width","y","clientY","height","setFromCamera","intersects","intersectObjects","children","excludeTankFromIntersects","checkFirstObject","material","color","onHoverObject","blades","forEach","index","baffles","createAxis","createPlane","createTank","createShaft","createDisk","createHub","changeBladeCount","bladeCount","changeBaffleCount","baffleCount","kernelAngle","stopAutoRotation","dispose","nextProps","setSize","aspect","updateProjectionMatrix","kernelAutoRotation","isEqual","updateTank","updateShaft","updateDisk","updateHub","updateBlades","updateBaffles","_this3","timerId","setInterval","kernelRotationDir","clearInterval","update","render","_this4","axis","AxisHelper","FontLoader","load","font","geoOption","size","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","positionEndAxes","geometry","attributes","xGeometry","TextGeometry","xMaterial","MeshBasicMaterial","Color","xLabel","Mesh","getX","z","yGeometry","yMaterial","yLabel","getY","zGeometry","zMaterial","zLabel","getZ","PlaneBufferGeometry","MeshPhongMaterial","specular","plane","rotation","Math","PI","receiveShadow","_ref","tankHeight","CylinderGeometry","createTankGeometry","MeshLambertMaterial","opacity","transparent","side","DoubleSide","shaftRadius","_ref2","createShaftGeometry","diskRadius","_ref3","diskHeight","createDiskGeometry","hubRadius","_ref4","hubHeight","createHubGeometry","newValue","oldValue","i","remove","pop","BoxGeometry","bladeWidth","bladeHeight","bladeOuterRadius","bladeInnerRadius","mesh","push","_ref5","distance","yAxis","Vector3","offset","length","angle","applyAxisAngle","baffleInnerRadius","_ref6","baffleOuterRadius","baffleWidth","createBaffleGeometry","_this5","onlyTank","intersect","object","uuid","filter","needle","haystack","react_default","a","createElement","ref","Component","Content","Layout","Header","Sider","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","canvasWidth","canvasHeight","unit","hoverObject","setState","innerWidth","innerHeight","handleResize","removeEventListener","field","value","defineProperty","target","checked","name","className","es","style","overflowY","theme","mode","SubMenu","key","title","type","fontWeight","Item","min","defaultValue","onChange","handleChange","handleAutoRotation","bind","Group","handleRadio","src_Turbine","handleHoverObject","Boolean","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55e85421.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst THREE = require('three');\nvar TrackballControls = require('three-trackballcontrols');\nvar _ = require('lodash');\n\nclass Turbine extends Component {\n  colors = {\n    normal: {\n      tank: 0xcccccc,\n      shaft: 0xdddddd,\n      disk: 0xdddddd,\n      hub: 0xdddddd,\n      blade: 0xdddddd,\n      baffle: 0xdddddd\n    },\n    hover: {\n      tank: 0x0000ff,\n      shaft: 0x00ff00,\n      disk: 0x00ff00,\n      hub: 0x00ff00,\n      blade: 0x00ff00,\n      baffle: 0x00ff00\n    }\n  }\n\n  componentDidMount() {\n    this.glRenderer = new THREE.WebGLRenderer({\n      canvas: this.refs.painter,\n      alpha: true,\n      antialias: true\n    });\n    this.glRenderer.animate(() => this.onAnimate());\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(45, 1, 0.1, 10000);\n    this.camera.position.set(0, 0, this.props.tankDiameter * 3);\n    this.scene.add(this.camera);\n\n    this.light = new THREE.PointLight(0xffffff, 0.3);\n    this.light.position.set(0, 0, this.props.tankDiameter * 3);\n    this.scene.add(this.light);\n\n    this.controls = new TrackballControls(this.camera, this.refs.painter);\n\n    this.controls.rotateSpeed = 1.0;\n    this.controls.zoomSpeed = 1.2;\n    this.controls.panSpeed = 0.8;\n\n    this.controls.noZoom = false;\n    this.controls.noPan = false;\n\n    this.controls.staticMoving = true;\n    this.controls.dynamicDampingFactor = 0.3;\n\n    this.controls.keys = [ 65, 83, 68 ];\n\n    this.controls.addEventListener('change', () => {\n      this.light.position.copy(this.camera.position);\n    });\n    this.startAutoRotation();\n\n    this.raycaster = new THREE.Raycaster();\n    this.normalVector = new THREE.Vector2();\n    window.addEventListener('mousemove', event => {\n      // calculate mouse position in normalized device coordinates\n      // (-1 to +1) for both components\n      this.normalVector.x = ((event.clientX - 320) / this.props.width) * 2 - 1;\n      this.normalVector.y = -((event.clientY - 64) / this.props.height) * 2 + 1;\n\n      // update the picking ray with the camera and mouse position\n      this.raycaster.setFromCamera(this.normalVector, this.camera);\n\n      // calculate objects intersecting the picking ray\n      var intersects = this.raycaster.intersectObjects(this.scene.children, true);\n      intersects = this.excludeTankFromIntersects(intersects);\n      if (this.checkFirstObject(this.tank, intersects)) {\n        this.tank.material.color.set(this.colors.hover.tank);\n        this.props.onHoverObject('tank');\n      } else {\n        this.tank.material.color.set(this.colors.normal.tank);\n      }\n      if (this.checkFirstObject(this.shaft, intersects)) {\n        this.shaft.material.color.set(this.colors.hover.shaft);\n        this.props.onHoverObject('shaft');\n      } else {\n        this.shaft.material.color.set(this.colors.normal.shaft);\n      }\n      if (this.checkFirstObject(this.disk, intersects)) {\n        this.disk.material.color.set(this.colors.hover.disk);\n        this.props.onHoverObject('disk');\n      } else {\n        this.disk.material.color.set(this.colors.normal.disk);\n      }\n      if (this.checkFirstObject(this.hub, intersects)) {\n        this.hub.material.color.set(this.colors.hover.hub);\n        this.props.onHoverObject('hub');\n      } else {\n        this.hub.material.color.set(this.colors.normal.hub);\n      }\n      if (this.checkFirstObject(this.hub, intersects)) {\n        this.hub.material.color.set(this.colors.hover.hub);\n        this.props.onHoverObject('hub');\n      } else {\n        this.hub.material.color.set(this.colors.normal.hub);\n      }\n      this.blades.forEach((blade, index) => {\n        if (this.checkFirstObject(blade, intersects)) {\n          this.blades[index].material.color.set(this.colors.hover.blade);\n          this.props.onHoverObject('blade');\n        } else {\n          this.blades[index].material.color.set(this.colors.normal.blade);\n        }\n      });\n      this.baffles.forEach((baffle, index) => {\n        if (this.checkFirstObject(baffle, intersects)) {\n          this.baffles[index].material.color.set(this.colors.hover.baffle);\n          this.props.onHoverObject('baffle');\n        } else {\n          this.baffles[index].material.color.set(this.colors.normal.baffle);\n        }\n      });\n    });\n\n    this.createAxis();\n    this.createPlane();\n\n    this.createTank();\n    this.createShaft();\n    this.createDisk();\n    this.createHub();\n\n    this.blades = [];\n    this.changeBladeCount(this.props.bladeCount, 0);\n    this.baffles = [];\n    this.changeBaffleCount(this.props.baffleCount, 0);\n\n    this.kernelAngle = 0;\n  }\n\n  componentWillUnmount() {\n    this.stopAutoRotation();\n    this.controls.dispose();\n    delete this.controls;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {\n      this.glRenderer.setSize(nextProps.width, nextProps.height);\n      this.camera.aspect = nextProps.width / nextProps.height;\n      this.camera.updateProjectionMatrix();\n    }\n\n    if (nextProps.kernelAutoRotation && !this.props.kernelAutoRotation) {\n      this.startAutoRotation();\n    } else if (!nextProps.kernelAutoRotation && this.props.kernelAutoRotation) {\n      this.stopAutoRotation();\n    }\n\n    if (nextProps.bladeCount !== this.props.bladeCount) {\n      this.changeBladeCount(nextProps.bladeCount, this.props.bladeCount);\n    }\n    if (nextProps.baffleCount !== this.props.baffleCount) {\n      this.changeBaffleCount(nextProps.baffleCount, this.props.baffleCount);\n    }\n\n    if (!_.isEqual(nextProps, this.props)) {\n      this.updateTank(nextProps);\n      this.updateShaft(nextProps);\n      this.updateDisk(nextProps);\n      this.updateHub(nextProps);\n      this.updateBlades(nextProps);\n      this.updateBaffles(nextProps);\n    }\n  }\n\n  startAutoRotation() {\n    this.timerId = window.setInterval(() => {\n      switch (this.props.kernelRotationDir) {\n        case 'clockwise':\n          this.kernelAngle = (this.kernelAngle + 4) % 360;\n          this.updateBlades(this.props);\n          break;\n        case 'counter-clockwise':\n          this.kernelAngle = (this.kernelAngle - 4) % 360;\n          this.updateBlades(this.props);\n          break;\n      }\n    }, 60);\n  }\n\n  stopAutoRotation() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  onAnimate() {\n    // we will get this callback every frame\n\n    // pretend cubeRotation is immutable.\n    // this helps with updates and pure rendering.\n    // React will be sure that the rotation has now updated.\n    // this.setState({\n    //   cubeRotation: new THREE.Euler(\n    //     this.props.cubeRotation.x + 0.1,\n    //     this.props.cubeRotation.y + 0.1,\n    //     0\n    //   )\n    // });\n    this.controls.update();\n\n    this.glRenderer.render(this.scene, this.camera);\n  }\n\n  createAxis() {\n    var axis = new THREE.AxisHelper(300);\n    this.scene.add(axis);\n\n    var loader = new THREE.FontLoader();\n    loader.load('fonts/helvetiker_regular.typeface.json', font => {\n      var geoOption = {\n        font: font,\n        size: 10,\n        height: 2,\n        curveSegments: 12,\n        bevelEnabled: true,\n        bevelThickness: 2,\n        bevelSize: 2,\n        bevelSegments: 5\n      };\n\n      // Position of axes extremities\n      var positionEndAxes = axis.geometry.attributes.position;\n\n      var xGeometry = new THREE.TextGeometry('X', geoOption);\n      var xMaterial = new THREE.MeshBasicMaterial({\n        color: new THREE.Color(0xff0000)\n      });\n      var xLabel = new THREE.Mesh(xGeometry, xMaterial);\n      xLabel.position.x = positionEndAxes.getX(0) + 300;\n      xLabel.position.y = 0;\n      xLabel.position.z = 0;\n      this.scene.add(xLabel);\n\n      var yGeometry = new THREE.TextGeometry('Y', geoOption);\n      var yMaterial = new THREE.MeshBasicMaterial({\n        color: new THREE.Color(0x00ff00)\n      });\n      var yLabel = new THREE.Mesh(yGeometry, yMaterial);\n      yLabel.position.x = 0;\n      yLabel.position.y = positionEndAxes.getY(1) + 300;\n      yLabel.position.z = 0;\n      this.scene.add(yLabel);\n\n      var zGeometry = new THREE.TextGeometry('Z', geoOption);\n      var zMaterial = new THREE.MeshBasicMaterial({\n        color: new THREE.Color(0x0000ff)\n      });\n      var zLabel = new THREE.Mesh(zGeometry, zMaterial);\n      zLabel.position.x = 0;\n      zLabel.position.y = 0;\n      zLabel.position.z = positionEndAxes.getZ(2) + 300;\n      this.scene.add(zLabel);\n    });\n  }\n\n  createPlane() {\n    var geometry = new THREE.PlaneBufferGeometry(1000, 1000);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xffff00,\n      specular: 0x101010\n    });\n    var plane = new THREE.Mesh(geometry, material);\n    plane.rotation.x = -(Math.PI / 2);\n    plane.position.y = -150;\n    plane.receiveShadow = true;\n    this.scene.add(plane);\n  }\n\n  createTankGeometry({ tankDiameter, tankHeight }) {\n    return new THREE.CylinderGeometry(tankDiameter / 2, tankDiameter / 2, tankHeight, 30);\n  }\n\n  createTank() {\n    var geometry = this.createTankGeometry(this.props);\n    var material = new THREE.MeshLambertMaterial({\n      color: 0xcccccc,\n      opacity: 0.2,\n      transparent: true,\n      side: THREE.DoubleSide\n    });\n    this.tank = new THREE.Mesh(geometry, material);\n    this.scene.add(this.tank);\n  }\n\n  updateTank(props) {\n    delete this.tank.geometry;\n    this.tank.geometry = this.createTankGeometry(props);\n  }\n\n  createShaftGeometry({ shaftRadius, tankHeight }) {\n    return new THREE.CylinderGeometry(shaftRadius, shaftRadius, tankHeight, 30);\n  }\n\n  createShaft() {\n    var geometry = this.createShaftGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.shaft = new THREE.Mesh(geometry, material);\n    this.scene.add(this.shaft);\n  }\n\n  updateShaft(props) {\n    delete this.shaft.geometry;\n    this.shaft.geometry = this.createShaftGeometry(props);\n  }\n\n  createDiskGeometry({ diskRadius, diskHeight }) {\n    return new THREE.CylinderGeometry(diskRadius, diskRadius, diskHeight, 30);\n  }\n\n  createDisk() {\n    var geometry = this.createDiskGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.disk = new THREE.Mesh(geometry, material);\n    this.disk.position.set(0, -(this.props.tankHeight / 6), 0);\n    this.scene.add(this.disk);\n  }\n\n  updateDisk(props) {\n    delete this.disk.geometry;\n    this.disk.geometry = this.createDiskGeometry(props);\n    this.disk.position.set(0, -(props.tankHeight / 6), 0);\n  }\n\n  createHubGeometry({ hubRadius, hubHeight }) {\n    return new THREE.CylinderGeometry(hubRadius, hubRadius, hubHeight, 30);\n  }\n\n  createHub() {\n    var geometry = this.createHubGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.hub = new THREE.Mesh(geometry, material);\n    this.hub.position.set(0, -(this.props.tankHeight / 6), 0);\n    this.scene.add(this.hub);\n  }\n\n  updateHub(props) {\n    delete this.hub.geometry;\n    this.hub.geometry = this.createHubGeometry(props);\n    this.hub.position.set(0, -(props.tankHeight / 6), 0);\n  }\n\n  changeBladeCount(newValue: number, oldValue: number) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.blades[i]);\n        this.blades.pop();\n        delete this.blades[i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var blade = new THREE.BoxGeometry(this.props.bladeWidth, this.props.bladeHeight, this.props.bladeOuterRadius - this.props.bladeInnerRadius);\n        var material = new THREE.MeshPhongMaterial({ color: 0xeeeeee });\n        var mesh = new THREE.Mesh(blade, material);\n        this.blades.push(mesh);\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  updateBlades({ bladeInnerRadius, bladeOuterRadius, tankHeight }) {\n    var distance = (bladeInnerRadius + bladeOuterRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    var offset = new THREE.Vector3(0, -(tankHeight / 6), 0);\n    for (var i = 0; i < this.blades.length; i++) {\n      var angle = (360 * i / this.blades.length + this.kernelAngle) % 360;\n      angle = 2 * Math.PI * angle / 360;\n      this.blades[i].position.set(0, 0, distance);\n      this.blades[i].position.applyAxisAngle(yAxis, angle);\n      this.blades[i].position.add(offset);\n      this.blades[i].rotation.set(0, angle, 0);\n    }\n  }\n\n  createBaffleGeometry({ baffleInnerRadius, baffleOuterRadius, baffleWidth, tankHeight }) {\n    return new THREE.BoxGeometry(baffleWidth, tankHeight, baffleOuterRadius - baffleInnerRadius);\n  }\n\n  changeBaffleCount(newValue: number, oldValue: number) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.baffles[i]);\n        this.baffles.pop();\n        delete this.baffles[i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var baffle = this.createBaffleGeometry(this.props);\n        var material = new THREE.MeshPhongMaterial({ color: 0xeeeeee });\n        var mesh = new THREE.Mesh(baffle, material);\n        this.baffles.push(mesh);\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  updateBaffles(props) {\n    const { baffleInnerRadius, baffleOuterRadius } = props;\n    var distance = (baffleInnerRadius + baffleOuterRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    for (var i = 0; i < this.baffles.length; i++) {\n      delete this.baffles[i].geometry;\n      this.baffles[i].geometry = this.createBaffleGeometry(props);\n      var angle = 2 * Math.PI * i / this.baffles.length;\n      this.baffles[i].position.set(0, 0, distance);\n      this.baffles[i].position.applyAxisAngle(yAxis, angle);\n      this.baffles[i].rotation.set(0, angle, 0);\n    }\n  }\n\n  excludeTankFromIntersects(intersects: Array) {\n    var onlyTank = true;\n    intersects.forEach(intersect => {\n      if (intersect.object.uuid !== this.tank.uuid) {\n        onlyTank = false;\n        return false;\n      }\n    }, this);\n    if (onlyTank) {\n      return intersects;\n    }\n    return intersects.filter((intersect, index) => {\n      return intersect.object.uuid !== this.tank.uuid;\n    }, this);\n  }\n\n  checkFirstObject(needle: THREE.Object3D, haystack: Array) {\n    if (haystack.length > 0) {\n      return needle.uuid === haystack[0].object.uuid;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <canvas ref=\"painter\" width={this.props.width} height={this.props.height}></canvas>\n    );\n  }\n}\n\nTurbine.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  tankDiameter: PropTypes.number.isRequired,\n  tankHeight: PropTypes.number.isRequired,\n  shaftRadius: PropTypes.number.isRequired,\n  kernelAutoRotation: PropTypes.bool,\n  kernelRotationDir: PropTypes.string,\n  diskRadius: PropTypes.number.isRequired,\n  diskHeight: PropTypes.number.isRequired,\n  hubRadius: PropTypes.number.isRequired,\n  hubHeight: PropTypes.number.isRequired,\n  bladeCount: PropTypes.number.isRequired,\n  bladeInnerRadius: PropTypes.number.isRequired,\n  bladeOuterRadius: PropTypes.number.isRequired,\n  bladeWidth: PropTypes.number.isRequired,\n  bladeHeight: PropTypes.number.isRequired,\n  baffleCount: PropTypes.number.isRequired,\n  baffleInnerRadius: PropTypes.number.isRequired,\n  baffleOuterRadius: PropTypes.number.isRequired,\n  baffleWidth: PropTypes.number.isRequired,\n  onHoverObject: PropTypes.func\n};\n\nexport default Turbine;\n","import React, { Component } from 'react';\nimport { Checkbox, Icon, InputNumber, Layout, Menu, Radio } from 'antd';\nimport Turbine from './Turbine';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nconst { Content, Header, Sider } = Layout;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const unit = 300;\n    this.state = {\n      canvasWidth: 50,\n      canvasHeight: 50,\n      tankDiameter: unit,\n      tankHeight: unit,\n      shaftRadius: unit * 2 / 75,\n      kernelAutoRotation: true,\n      kernelRotationDir: 'clockwise',\n      diskRadius: unit / 8,\n      diskHeight: unit / 75,\n      hubRadius: unit * 4 / 75,\n      hubHeight: unit / 15,\n      bladeCount: 6,\n      bladeInnerRadius: unit / 12,\n      bladeOuterRadius: unit / 6,\n      bladeWidth: unit / 75,\n      bladeHeight: unit / 15,\n      baffleCount: 4,\n      baffleInnerRadius: unit * 2 / 5,\n      baffleOuterRadius: unit / 2,\n      baffleWidth: unit / 75,\n      hoverObject: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      canvasWidth: window.innerWidth - 320,\n      canvasHeight: window.innerHeight - 64\n    });\n    this.handleResize = () => {\n      this.setState({\n        canvasWidth: window.innerWidth - 320,\n        canvasHeight: window.innerHeight - 64\n      });\n    }\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleChange(field, value) {\n    this.setState({ [field]: value });\n  }\n\n  handleAutoRotation(event) {\n    this.setState({ kernelAutoRotation: event.target.checked });\n  }\n\n  handleRadio(event) {\n    this.setState({ kernelRotationDir: event.target.value });\n  }\n\n  handleHoverObject(name) {\n    this.setState({ hoverObject: name });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout style={{ height: '100%' }}>\n          <Sider width={320} style={{ overflowY: 'auto' }}>\n            <div className=\"logo\"></div>\n            <Menu theme=\"dark\" mode=\"inline\">\n              <Menu.SubMenu key=\"tank\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'tank' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'tank' ? 'bold' : 'normal'\n                  }}>Tank</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem1\">\n                  <span>Diameter</span>\n                  <InputNumber min={100} defaultValue={this.state.tankDiameter} onChange={(value) => this.handleChange('tankDiameter', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem2\">\n                  <span>Height</span>\n                  <InputNumber min={100} defaultValue={this.state.tankHeight} onChange={(value) => this.handleChange('tankHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"shaft\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'shaft' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'shaft' ? 'bold' : 'normal'\n                  }}>Shaft</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem3\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.shaftRadius} onChange={(value) => this.handleChange('shaftRadius', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"disk\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'disk' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'disk' ? 'bold' : 'normal'\n                  }}>Disk</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem4\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.diskRadius} onChange={(value) => this.handleChange('diskRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem5\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.diskHeight} onChange={(value) => this.handleChange('diskHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"hub\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'hub' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'hub' ? 'bold' : 'normal'\n                  }}>Hub</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem6\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.hubRadius} onChange={(value) => this.handleChange('hubRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem7\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.hubHeight} onChange={(value) => this.handleChange('hubHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"blade\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'blade' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'blade' ? 'bold' : 'normal'\n                  }}>Blade</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem8\">\n                  <span>Count</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeCount} onChange={(value) => this.handleChange('bladeCount', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem9\">\n                  <span>Inner Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeInnerRadius} onChange={(value) => this.handleChange('bladeInnerRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem10\">\n                  <span>Outer Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeOuterRadius} onChange={(value) => this.handleChange('bladeOuterRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem11\">\n                  <span>Width</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeWidth} onChange={(value) => this.handleChange('bladeWidth', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem12\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeHeight} onChange={(value) => this.handleChange('bladeHeight', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem13\">\n                  <Checkbox checked={this.state.kernelAutoRotation} onChange={this.handleAutoRotation.bind(this)}>Auto Rotation</Checkbox>\n                </Menu.Item>\n                <Menu.Item key=\"menuitem14\">\n                  <Radio.Group onChange={this.handleRadio.bind(this)} value={this.state.kernelRotationDir}>\n                    <Radio value=\"clockwise\">Clockwise</Radio>\n                    <Radio value=\"counter-clockwise\">Counter-Clockwise</Radio>\n                  </Radio.Group>\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"baffle\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'baffle' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'baffle' ? 'bold' : 'normal'\n                  }}>Baffle</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem14\">\n                  <span>Count</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleCount} onChange={(value) => this.handleChange('baffleCount', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem15\">\n                  <span>Inner Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleInnerRadius} onChange={(value) => this.handleChange('baffleInnerRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem16\">\n                  <span>Outer Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleOuterRadius} onChange={(value) => this.handleChange('baffleOuterRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem17\">\n                  <span>Width</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleWidth} onChange={(value) => this.handleChange('baffleWidth', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Header>\n              <h1>Turbulent Dynamics</h1>\n            </Header>\n            <Content style={{ overflowY: 'hidden' }}>\n              <Turbine\n                width={this.state.canvasWidth}\n                height={this.state.canvasHeight}\n                tankDiameter={this.state.tankDiameter}\n                tankHeight={this.state.tankHeight}\n                shaftRadius={this.state.shaftRadius}\n                kernelAutoRotation={this.state.kernelAutoRotation}\n                kernelRotationDir={this.state.kernelRotationDir}\n                diskRadius={this.state.diskRadius}\n                diskHeight={this.state.diskHeight}\n                hubRadius={this.state.hubRadius}\n                hubHeight={this.state.hubHeight}\n                bladeCount={this.state.bladeCount}\n                bladeInnerRadius={this.state.bladeInnerRadius}\n                bladeOuterRadius={this.state.bladeOuterRadius}\n                bladeWidth={this.state.bladeWidth}\n                bladeHeight={this.state.bladeHeight}\n                baffleCount={this.state.baffleCount}\n                baffleInnerRadius={this.state.baffleInnerRadius}\n                baffleOuterRadius={this.state.baffleOuterRadius}\n                baffleWidth={this.state.baffleWidth}\n                onHoverObject={name => this.handleHoverObject(name)}\n              />\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}